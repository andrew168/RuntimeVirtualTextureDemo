add a C++class,choose Actor component as the parent class;
and copy the C++ code from the compelete one;
combine and go to the third person’s  blueprint, open it
add the C++ component you have just create
in the details of the component, find [BloodRenderMaterialAsset],choose M_BloodRender as the defaultValue;
and remenber to set (Pitch=-90.000000,Yaw=0.000000,Roll=-90.000000) as Texture2DRelative Transform in the details of the CH_Blood;
set the CapsuleComponent of the thridPersonCharacter 's collision as {Pawn}Presets
set the Mesh 's collision as worldDynamic ; CollisionEnable:(QueryAndPhysics)

in graph of this Thridpersoncharacter,copy the graph from the compeleted one ,{the graph is using as initialize and call a TakeHitFunction,you 
can use different way to call it as you want}

go to the firstpersonCharacter, copy the blueprint from the complete one,noticed:when you copy please make sure you have
copy the function's logic as well
(all this function do is to call a TakeDamage to the target[thirdpersoncharacter])



now every thing should be work
and you can enjoy it!


while you have play it ,you will noticed that the blood has the mirror showup
[这是因为epic的第三人称的角色的贴图没有使用baseMap，它只是用了一个纯色的贴图，因为角色没有UV，
而血迹计算是根据uv坐标实现的，当你把这个角色换成其它uv正常的角色网格时，他将准确计算]
